{"version":3,"file":"convert.astro.mjs","sources":["../../../src/pages/convert.astro"],"sourcesContent":["---\nexport const prerender = true;\n\nimport CenteredBody from \"components/CenteredBody.astro\";\nimport Layout from \"layouts/Layout.astro\";\n\n// hack: this route is not in the lang folder. layout requires lang, so just force to english\nAstro.params.lang = \"en\";\n---\n\n<!-- this is just a random page to convert Aliucord themes -->\n<Layout\n    title=\"Aliucord Theme Converter\"\n    description=\"A tool that allows you to convert Aliucord Themer themes to Xposed Themer compatible themes\"\n>\n    <CenteredBody>\n        <h1>Aliucord Theme Converter</h1>\n        <p>\n            This tool allows you to convert themes created with the Themer\n            plugin to themes compatible with the Xposed module.\n        </p>\n        <p>\n            Note that the Xposed module does not have as many features as the\n            plugin, so things like backgrounds will not work!\n        </p>\n\n        <section>\n            <label for=\"file\">\n                <input\n                    type=\"file\"\n                    id=\"file\"\n                    name=\"file\"\n                    accept=\"application/json\"\n                />\n                Choose a theme to convert</label\n            >\n        </section>\n    </CenteredBody>\n</Layout>\n\n<script>\n    const input = document.getElementById(\"file\")! as HTMLInputElement;\n    input.addEventListener(\n        \"change\",\n        function () {\n            const file = input.files![input.files!.length - 1];\n            const { name } = file;\n\n            const reader = new FileReader();\n            reader.onload = e => {\n                const json = JSON.parse(e.target!.result as string);\n                console.log(json);\n                const converted = {} as Record<string, any>;\n\n                function loopIfNotNull(\n                    obj: Record<string, any>,\n                    fn: (key: string, value: any) => void\n                ) {\n                    if (obj != null) for (const key in obj) fn(key, obj[key]);\n                }\n\n                loopIfNotNull(\n                    json.colors,\n                    (k, v) => (converted[\"color_\" + k] = v)\n                );\n\n                loopIfNotNull(\n                    json.drawable_tints,\n                    (k, v) => (converted[\"drawablecolor_\" + k] = v)\n                );\n\n                const map = {\n                    accent: \"simple_accent_color\",\n                    background: \"simple_bg_color\",\n                    background_secondary: \"simple_bg_secondary_color\",\n                    mention_highlight: \"mention_highlight\",\n                };\n\n                loopIfNotNull(json.simple_colors, (k, v) => {\n                    converted[map[k as keyof typeof map] ?? k + \"_color\"] = v;\n                });\n\n                const file = new Blob([JSON.stringify(converted, null, 4)], {\n                    type: \"text/plain\",\n                });\n\n                const a = document.createElement(\"a\");\n                const url = URL.createObjectURL(file);\n\n                a.href = url;\n                a.download =\n                    (name.endsWith(\".json\") ? name.slice(0, -5) : name) +\n                    \".converted.json\";\n                document.body.appendChild(a);\n                a.click();\n\n                setImmediate(() => {\n                    document.body.removeChild(a);\n                    window.URL.revokeObjectURL(url);\n                });\n            };\n            reader.readAsText(file);\n        },\n        false\n    );\n</script>\n\n<style>\n    label {\n        display: inline-block;\n        margin-top: 0.5em;\n        padding: 1em 2em;\n\n        cursor: pointer;\n        background-color: var(--background-color);\n        color: var(--accent);\n        border: 1px solid var(--accent);\n\n        transition: 0.2s ease, 0.2s ease;\n        transition-property: background-color, color, box-shadow;\n\n        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1), 0 2px 4px rgba(0, 0, 0, 0.2);\n    }\n\n    label:hover,\n    label:focus,\n    label:focus-within {\n        background-color: var(--accent);\n        color: var(--surface);\n        box-shadow: 0 8px 15px rgba(0, 0, 0, 0.25),\n            0 6px 6px rgba(0, 0, 0, 0.22);\n    }\n\n    input {\n        width: 0;\n        height: 0;\n    }\n</style>\n"],"names":["$$createAstro","$$createComponent","Astro","$$render","$$renderComponent","Layout","$$result","CenteredBody","$$maybeRenderHead","$$renderScript"],"mappings":";;;;;;;AAAA,MAAA,OAAA,GAAAA,YAAA,wBAAA,CAAA;AACO,MAAM,SAAY,GAAA,IAAA;AADzB,MAAA,SAAA,GAAAC,eAAA,CAAA,CAAA,QAAA,EAAA,SAAA,OAAA,KAAA;AAAA,EAAA,MAAAC,MAAA,GAAA,QAAA,CAAA,WAAA,CAAA,OAAA,EAAA,SAAA,OAAA,CAAA;AAAA,EAAAA,OAAA,IAAA,GAAA,SAAA;AAOA,EAAAA,MAAAA,CAAM,OAAO,IAAO,GAAA,IAAA;AAPpB,EAAA,OAAAC,cAAA,CAAA,8DAAA,EAAAC,eAAA,CAAA,QAAA,EAAA,QAAA,EAAAC,UAAA,EAYI,OAAA,EAAO,0BACP,EAAA,aAAA,EAAa,6FAbjB,EAAA,yBAAA,EAAA,IAAA,EAAA,EAAA,EAAA,SAAA,EAAA,CAAAC,SAAA,KAAAH,cAAA,CAAA,CAAA,EAAAC,eAAAE,CAAAA,SAAAA,EAAA,cAAA,EAAAC,cAAA,EAAA,EAAA,yBAAA,EAAA,IAAA,EAAA,EAAA,EAAA,WAAA,CAAAD,SAAAA,KAAAH,cAAA,CAAA,CAAA,EAAAK,eAAA,CAAA,CAAA,CAAA;;;;;;;gDAqCM,CAAA,KACJ,CAAA,IAEDC,YAAA,CAAA,QAAA,EAAA,8FAAA,CAAA,CAAA,CAAA,CAAA;AAxCD,CAAA,EAAA,8DAAA,MAAA,CAAA;;;;;;;;;;;;;;;;;"}