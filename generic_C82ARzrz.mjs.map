{"version":3,"file":"generic_C82ARzrz.mjs","sources":["../../../node_modules/astro/dist/assets/consts.js","../../../node_modules/astro/dist/assets/layout.js","../../../node_modules/astro/dist/assets/utils/imageKind.js","../../../node_modules/astro/dist/assets/services/service.js","../../../node_modules/astro/dist/assets/types.js","../../../node_modules/astro/dist/assets/utils/imageAttributes.js","../../../node_modules/astro/dist/assets/utils/vendor/image-size/types/utils.js","../../../node_modules/astro/dist/assets/utils/vendor/image-size/types/bmp.js","../../../node_modules/astro/dist/assets/utils/vendor/image-size/types/ico.js","../../../node_modules/astro/dist/assets/utils/vendor/image-size/types/cur.js","../../../node_modules/astro/dist/assets/utils/vendor/image-size/types/dds.js","../../../node_modules/astro/dist/assets/utils/vendor/image-size/types/gif.js","../../../node_modules/astro/dist/assets/utils/vendor/image-size/types/heif.js","../../../node_modules/astro/dist/assets/utils/vendor/image-size/types/icns.js","../../../node_modules/astro/dist/assets/utils/vendor/image-size/types/j2c.js","../../../node_modules/astro/dist/assets/utils/vendor/image-size/types/jp2.js","../../../node_modules/astro/dist/assets/utils/vendor/image-size/types/jpg.js","../../../node_modules/astro/dist/assets/utils/vendor/image-size/types/ktx.js","../../../node_modules/astro/dist/assets/utils/vendor/image-size/types/png.js","../../../node_modules/astro/dist/assets/utils/vendor/image-size/types/pnm.js","../../../node_modules/astro/dist/assets/utils/vendor/image-size/types/psd.js","../../../node_modules/astro/dist/assets/utils/vendor/image-size/types/svg.js","../../../node_modules/astro/dist/assets/utils/vendor/image-size/types/tga.js","../../../node_modules/astro/dist/assets/utils/vendor/image-size/types/tiff.js","../../../node_modules/astro/dist/assets/utils/vendor/image-size/types/webp.js","../../../node_modules/astro/dist/assets/utils/vendor/image-size/types/index.js","../../../node_modules/astro/dist/assets/utils/vendor/image-size/detector.js","../../../node_modules/astro/dist/assets/utils/vendor/image-size/lookup.js","../../../node_modules/astro/dist/assets/utils/metadata.js","../../../node_modules/astro/dist/assets/utils/remoteProbe.js","../../../node_modules/astro/dist/assets/internal.js","../../../node_modules/astro/components/Image.astro","../../../node_modules/astro/components/Picture.astro","../../../node_modules/astro/dist/assets/utils/etag.js","../../../node_modules/astro/dist/assets/endpoint/generic.js"],"sourcesContent":["const VIRTUAL_MODULE_ID = \"astro:assets\";\nconst VIRTUAL_SERVICE_ID = \"virtual:image-service\";\nconst VALID_INPUT_FORMATS = [\n  \"jpeg\",\n  \"jpg\",\n  \"png\",\n  \"tiff\",\n  \"webp\",\n  \"gif\",\n  \"svg\",\n  \"avif\"\n];\nconst VALID_SUPPORTED_FORMATS = [\n  \"jpeg\",\n  \"jpg\",\n  \"png\",\n  \"tiff\",\n  \"webp\",\n  \"gif\",\n  \"svg\",\n  \"avif\"\n];\nconst DEFAULT_OUTPUT_FORMAT = \"webp\";\nconst VALID_OUTPUT_FORMATS = [\"avif\", \"png\", \"webp\", \"jpeg\", \"jpg\", \"svg\"];\nconst DEFAULT_HASH_PROPS = [\n  \"src\",\n  \"width\",\n  \"height\",\n  \"format\",\n  \"quality\",\n  \"fit\",\n  \"position\"\n];\nexport {\n  DEFAULT_HASH_PROPS,\n  DEFAULT_OUTPUT_FORMAT,\n  VALID_INPUT_FORMATS,\n  VALID_OUTPUT_FORMATS,\n  VALID_SUPPORTED_FORMATS,\n  VIRTUAL_MODULE_ID,\n  VIRTUAL_SERVICE_ID\n};\n","const DEFAULT_RESOLUTIONS = [\n  640,\n  // older and lower-end phones\n  750,\n  // iPhone 6-8\n  828,\n  // iPhone XR/11\n  960,\n  // older horizontal phones\n  1080,\n  // iPhone 6-8 Plus\n  1280,\n  // 720p\n  1668,\n  // Various iPads\n  1920,\n  // 1080p\n  2048,\n  // QXGA\n  2560,\n  // WQXGA\n  3200,\n  // QHD+\n  3840,\n  // 4K\n  4480,\n  // 4.5K\n  5120,\n  // 5K\n  6016\n  // 6K\n];\nconst LIMITED_RESOLUTIONS = [\n  640,\n  // older and lower-end phones\n  750,\n  // iPhone 6-8\n  828,\n  // iPhone XR/11\n  1080,\n  // iPhone 6-8 Plus\n  1280,\n  // 720p\n  1668,\n  // Various iPads\n  2048,\n  // QXGA\n  2560\n  // WQXGA\n];\nconst getWidths = ({\n  width,\n  layout,\n  breakpoints = DEFAULT_RESOLUTIONS,\n  originalWidth\n}) => {\n  const smallerThanOriginal = (w) => !originalWidth || w <= originalWidth;\n  if (layout === \"full-width\") {\n    return breakpoints.filter(smallerThanOriginal);\n  }\n  if (!width) {\n    return [];\n  }\n  const doubleWidth = width * 2;\n  const maxSize = originalWidth ? Math.min(doubleWidth, originalWidth) : doubleWidth;\n  if (layout === \"fixed\") {\n    return originalWidth && width > originalWidth ? [originalWidth] : [width, maxSize];\n  }\n  if (layout === \"responsive\") {\n    return [\n      // Always include the image at 1x and 2x the specified width\n      width,\n      doubleWidth,\n      ...breakpoints\n    ].filter((w) => w <= maxSize).sort((a, b) => a - b);\n  }\n  return [];\n};\nconst getSizesAttribute = ({\n  width,\n  layout\n}) => {\n  if (!width || !layout) {\n    return void 0;\n  }\n  switch (layout) {\n    // If screen is wider than the max size then image width is the max size,\n    // otherwise it's the width of the screen\n    case `responsive`:\n      return `(min-width: ${width}px) ${width}px, 100vw`;\n    // Image is always the same width, whatever the size of the screen\n    case `fixed`:\n      return `${width}px`;\n    // Image is always the width of the screen\n    case `full-width`:\n      return `100vw`;\n    case \"none\":\n    default:\n      return void 0;\n  }\n};\nexport {\n  DEFAULT_RESOLUTIONS,\n  LIMITED_RESOLUTIONS,\n  getSizesAttribute,\n  getWidths\n};\n","function isESMImportedImage(src) {\n  return typeof src === \"object\" || typeof src === \"function\" && \"src\" in src;\n}\nfunction isRemoteImage(src) {\n  return typeof src === \"string\";\n}\nasync function resolveSrc(src) {\n  if (typeof src === \"object\" && \"then\" in src) {\n    const resource = await src;\n    return resource.default ?? resource;\n  }\n  return src;\n}\nexport {\n  isESMImportedImage,\n  isRemoteImage,\n  resolveSrc\n};\n","import { isRemoteAllowed } from \"@astrojs/internal-helpers/remote\";\nimport { AstroError, AstroErrorData } from \"../../core/errors/index.js\";\nimport { isRemotePath, joinPaths } from \"../../core/path.js\";\nimport { DEFAULT_HASH_PROPS, DEFAULT_OUTPUT_FORMAT, VALID_SUPPORTED_FORMATS } from \"../consts.js\";\nimport { isESMImportedImage, isRemoteImage } from \"../utils/imageKind.js\";\nfunction isLocalService(service) {\n  if (!service) {\n    return false;\n  }\n  return \"transform\" in service;\n}\nfunction parseQuality(quality) {\n  let result = parseInt(quality);\n  if (Number.isNaN(result)) {\n    return quality;\n  }\n  return result;\n}\nconst sortNumeric = (a, b) => a - b;\nconst baseService = {\n  propertiesToHash: DEFAULT_HASH_PROPS,\n  validateOptions(options) {\n    if (!options.src || !isRemoteImage(options.src) && !isESMImportedImage(options.src)) {\n      throw new AstroError({\n        ...AstroErrorData.ExpectedImage,\n        message: AstroErrorData.ExpectedImage.message(\n          JSON.stringify(options.src),\n          typeof options.src,\n          JSON.stringify(options, (_, v) => v === void 0 ? null : v)\n        )\n      });\n    }\n    if (!isESMImportedImage(options.src)) {\n      if (options.src.startsWith(\"/@fs/\") || !isRemotePath(options.src) && !options.src.startsWith(\"/\")) {\n        throw new AstroError({\n          ...AstroErrorData.LocalImageUsedWrongly,\n          message: AstroErrorData.LocalImageUsedWrongly.message(options.src)\n        });\n      }\n      let missingDimension;\n      if (!options.width && !options.height) {\n        missingDimension = \"both\";\n      } else if (!options.width && options.height) {\n        missingDimension = \"width\";\n      } else if (options.width && !options.height) {\n        missingDimension = \"height\";\n      }\n      if (missingDimension) {\n        throw new AstroError({\n          ...AstroErrorData.MissingImageDimension,\n          message: AstroErrorData.MissingImageDimension.message(missingDimension, options.src)\n        });\n      }\n    } else {\n      if (!VALID_SUPPORTED_FORMATS.includes(options.src.format)) {\n        throw new AstroError({\n          ...AstroErrorData.UnsupportedImageFormat,\n          message: AstroErrorData.UnsupportedImageFormat.message(\n            options.src.format,\n            options.src.src,\n            VALID_SUPPORTED_FORMATS\n          )\n        });\n      }\n      if (options.widths && options.densities) {\n        throw new AstroError(AstroErrorData.IncompatibleDescriptorOptions);\n      }\n      if (options.src.format === \"svg\") {\n        options.format = \"svg\";\n      }\n      if (options.src.format === \"svg\" && options.format !== \"svg\" || options.src.format !== \"svg\" && options.format === \"svg\") {\n        throw new AstroError(AstroErrorData.UnsupportedImageConversion);\n      }\n    }\n    if (!options.format) {\n      options.format = DEFAULT_OUTPUT_FORMAT;\n    }\n    if (options.width) options.width = Math.round(options.width);\n    if (options.height) options.height = Math.round(options.height);\n    if (options.layout && options.width && options.height) {\n      options.fit ??= \"cover\";\n      delete options.layout;\n    }\n    if (options.fit === \"none\") {\n      delete options.fit;\n    }\n    return options;\n  },\n  getHTMLAttributes(options) {\n    const { targetWidth, targetHeight } = getTargetDimensions(options);\n    const {\n      src,\n      width,\n      height,\n      format,\n      quality,\n      densities,\n      widths,\n      formats,\n      layout,\n      priority,\n      fit,\n      position,\n      ...attributes\n    } = options;\n    return {\n      ...attributes,\n      width: targetWidth,\n      height: targetHeight,\n      loading: attributes.loading ?? \"lazy\",\n      decoding: attributes.decoding ?? \"async\"\n    };\n  },\n  getSrcSet(options) {\n    const { targetWidth, targetHeight } = getTargetDimensions(options);\n    const aspectRatio = targetWidth / targetHeight;\n    const { widths, densities } = options;\n    const targetFormat = options.format ?? DEFAULT_OUTPUT_FORMAT;\n    let transformedWidths = (widths ?? []).sort(sortNumeric);\n    let imageWidth = options.width;\n    let maxWidth = Infinity;\n    if (isESMImportedImage(options.src)) {\n      imageWidth = options.src.width;\n      maxWidth = imageWidth;\n      if (transformedWidths.length > 0 && transformedWidths.at(-1) > maxWidth) {\n        transformedWidths = transformedWidths.filter((width) => width <= maxWidth);\n        transformedWidths.push(maxWidth);\n      }\n    }\n    transformedWidths = Array.from(new Set(transformedWidths));\n    const {\n      width: transformWidth,\n      height: transformHeight,\n      ...transformWithoutDimensions\n    } = options;\n    let allWidths = [];\n    if (densities) {\n      const densityValues = densities.map((density) => {\n        if (typeof density === \"number\") {\n          return density;\n        } else {\n          return parseFloat(density);\n        }\n      });\n      const densityWidths = densityValues.sort(sortNumeric).map((density) => Math.round(targetWidth * density));\n      allWidths = densityWidths.map((width, index) => ({\n        width,\n        descriptor: `${densityValues[index]}x`\n      }));\n    } else if (transformedWidths.length > 0) {\n      allWidths = transformedWidths.map((width) => ({\n        width,\n        descriptor: `${width}w`\n      }));\n    }\n    return allWidths.map(({ width, descriptor }) => {\n      const height = Math.round(width / aspectRatio);\n      const transform = { ...transformWithoutDimensions, width, height };\n      return {\n        transform,\n        descriptor,\n        attributes: {\n          type: `image/${targetFormat}`\n        }\n      };\n    });\n  },\n  getURL(options, imageConfig) {\n    const searchParams = new URLSearchParams();\n    if (isESMImportedImage(options.src)) {\n      searchParams.append(\"href\", options.src.src);\n    } else if (isRemoteAllowed(options.src, imageConfig)) {\n      searchParams.append(\"href\", options.src);\n    } else {\n      return options.src;\n    }\n    const params = {\n      w: \"width\",\n      h: \"height\",\n      q: \"quality\",\n      f: \"format\",\n      fit: \"fit\",\n      position: \"position\"\n    };\n    Object.entries(params).forEach(([param, key]) => {\n      options[key] && searchParams.append(param, options[key].toString());\n    });\n    const imageEndpoint = joinPaths(import.meta.env.BASE_URL, imageConfig.endpoint.route);\n    return `${imageEndpoint}?${searchParams}`;\n  },\n  parseURL(url) {\n    const params = url.searchParams;\n    if (!params.has(\"href\")) {\n      return void 0;\n    }\n    const transform = {\n      src: params.get(\"href\"),\n      width: params.has(\"w\") ? parseInt(params.get(\"w\")) : void 0,\n      height: params.has(\"h\") ? parseInt(params.get(\"h\")) : void 0,\n      format: params.get(\"f\"),\n      quality: params.get(\"q\"),\n      fit: params.get(\"fit\"),\n      position: params.get(\"position\") ?? void 0\n    };\n    return transform;\n  }\n};\nfunction getTargetDimensions(options) {\n  let targetWidth = options.width;\n  let targetHeight = options.height;\n  if (isESMImportedImage(options.src)) {\n    const aspectRatio = options.src.width / options.src.height;\n    if (targetHeight && !targetWidth) {\n      targetWidth = Math.round(targetHeight * aspectRatio);\n    } else if (targetWidth && !targetHeight) {\n      targetHeight = Math.round(targetWidth / aspectRatio);\n    } else if (!targetWidth && !targetHeight) {\n      targetWidth = options.src.width;\n      targetHeight = options.src.height;\n    }\n  }\n  return {\n    targetWidth,\n    targetHeight\n  };\n}\nexport {\n  baseService,\n  isLocalService,\n  parseQuality\n};\n","const isESMImport = Symbol(\"#isESM\");\nfunction isImageMetadata(src) {\n  return src.fsPath && !(\"fsPath\" in src);\n}\nexport {\n  isImageMetadata\n};\n","import { toStyleString } from \"../../runtime/server/render/util.js\";\nconst cssFitValues = [\"fill\", \"contain\", \"cover\", \"scale-down\"];\nfunction addCSSVarsToStyle(vars, styles) {\n  const cssVars = Object.entries(vars).filter(([_, value]) => value !== void 0 && value !== false).map(([key, value]) => `--${key}: ${value};`).join(\" \");\n  if (!styles) {\n    return cssVars;\n  }\n  const style = typeof styles === \"string\" ? styles : toStyleString(styles);\n  return `${cssVars} ${style}`;\n}\nexport {\n  addCSSVarsToStyle,\n  cssFitValues\n};\n","const decoder = new TextDecoder();\nconst toUTF8String = (input, start = 0, end = input.length) => decoder.decode(input.slice(start, end));\nconst toHexString = (input, start = 0, end = input.length) => input.slice(start, end).reduce((memo, i) => memo + (\"0\" + i.toString(16)).slice(-2), \"\");\nconst readInt16LE = (input, offset = 0) => {\n  const val = input[offset] + input[offset + 1] * 2 ** 8;\n  return val | (val & 2 ** 15) * 131070;\n};\nconst readUInt16BE = (input, offset = 0) => input[offset] * 2 ** 8 + input[offset + 1];\nconst readUInt16LE = (input, offset = 0) => input[offset] + input[offset + 1] * 2 ** 8;\nconst readUInt24LE = (input, offset = 0) => input[offset] + input[offset + 1] * 2 ** 8 + input[offset + 2] * 2 ** 16;\nconst readInt32LE = (input, offset = 0) => input[offset] + input[offset + 1] * 2 ** 8 + input[offset + 2] * 2 ** 16 + (input[offset + 3] << 24);\nconst readUInt32BE = (input, offset = 0) => input[offset] * 2 ** 24 + input[offset + 1] * 2 ** 16 + input[offset + 2] * 2 ** 8 + input[offset + 3];\nconst readUInt32LE = (input, offset = 0) => input[offset] + input[offset + 1] * 2 ** 8 + input[offset + 2] * 2 ** 16 + input[offset + 3] * 2 ** 24;\nconst methods = {\n  readUInt16BE,\n  readUInt16LE,\n  readUInt32BE,\n  readUInt32LE\n};\nfunction readUInt(input, bits, offset, isBigEndian) {\n  offset = offset || 0;\n  const endian = isBigEndian ? \"BE\" : \"LE\";\n  const methodName = \"readUInt\" + bits + endian;\n  return methods[methodName](input, offset);\n}\nfunction readBox(buffer, offset) {\n  if (buffer.length - offset < 4) return;\n  const boxSize = readUInt32BE(buffer, offset);\n  if (buffer.length - offset < boxSize) return;\n  return {\n    name: toUTF8String(buffer, 4 + offset, 8 + offset),\n    offset,\n    size: boxSize\n  };\n}\nfunction findBox(buffer, boxName, offset) {\n  while (offset < buffer.length) {\n    const box = readBox(buffer, offset);\n    if (!box) break;\n    if (box.name === boxName) return box;\n    offset += box.size;\n  }\n}\nexport {\n  findBox,\n  readInt16LE,\n  readInt32LE,\n  readUInt,\n  readUInt16BE,\n  readUInt16LE,\n  readUInt24LE,\n  readUInt32BE,\n  readUInt32LE,\n  toHexString,\n  toUTF8String\n};\n","import { toUTF8String, readInt32LE, readUInt32LE } from \"./utils.js\";\nconst BMP = {\n  validate: (input) => toUTF8String(input, 0, 2) === \"BM\",\n  calculate: (input) => ({\n    height: Math.abs(readInt32LE(input, 22)),\n    width: readUInt32LE(input, 18)\n  })\n};\nexport {\n  BMP\n};\n","import { readUInt16LE } from \"./utils.js\";\nconst TYPE_ICON = 1;\nconst SIZE_HEADER = 2 + 2 + 2;\nconst SIZE_IMAGE_ENTRY = 1 + 1 + 1 + 1 + 2 + 2 + 4 + 4;\nfunction getSizeFromOffset(input, offset) {\n  const value = input[offset];\n  return value === 0 ? 256 : value;\n}\nfunction getImageSize(input, imageIndex) {\n  const offset = SIZE_HEADER + imageIndex * SIZE_IMAGE_ENTRY;\n  return {\n    height: getSizeFromOffset(input, offset + 1),\n    width: getSizeFromOffset(input, offset)\n  };\n}\nconst ICO = {\n  validate(input) {\n    const reserved = readUInt16LE(input, 0);\n    const imageCount = readUInt16LE(input, 4);\n    if (reserved !== 0 || imageCount === 0) return false;\n    const imageType = readUInt16LE(input, 2);\n    return imageType === TYPE_ICON;\n  },\n  calculate(input) {\n    const nbImages = readUInt16LE(input, 4);\n    const imageSize = getImageSize(input, 0);\n    if (nbImages === 1) return imageSize;\n    const imgs = [imageSize];\n    for (let imageIndex = 1; imageIndex < nbImages; imageIndex += 1) {\n      imgs.push(getImageSize(input, imageIndex));\n    }\n    return {\n      height: imageSize.height,\n      images: imgs,\n      width: imageSize.width\n    };\n  }\n};\nexport {\n  ICO\n};\n","import { ICO } from \"./ico.js\";\nimport { readUInt16LE } from \"./utils.js\";\nconst TYPE_CURSOR = 2;\nconst CUR = {\n  validate(input) {\n    const reserved = readUInt16LE(input, 0);\n    const imageCount = readUInt16LE(input, 4);\n    if (reserved !== 0 || imageCount === 0) return false;\n    const imageType = readUInt16LE(input, 2);\n    return imageType === TYPE_CURSOR;\n  },\n  calculate: (input) => ICO.calculate(input)\n};\nexport {\n  CUR\n};\n","import { readUInt32LE } from \"./utils.js\";\nconst DDS = {\n  validate: (input) => readUInt32LE(input, 0) === 542327876,\n  calculate: (input) => ({\n    height: readUInt32LE(input, 12),\n    width: readUInt32LE(input, 16)\n  })\n};\nexport {\n  DDS\n};\n","import { toUTF8String, readUInt16LE } from \"./utils.js\";\nconst gifRegexp = /^GIF8[79]a/;\nconst GIF = {\n  validate: (input) => gifRegexp.test(toUTF8String(input, 0, 6)),\n  calculate: (input) => ({\n    height: readUInt16LE(input, 8),\n    width: readUInt16LE(input, 6)\n  })\n};\nexport {\n  GIF\n};\n","import { findBox, readUInt32BE, toUTF8String } from \"./utils.js\";\nconst brandMap = {\n  avif: \"avif\",\n  mif1: \"heif\",\n  msf1: \"heif\",\n  // hief-sequence\n  heic: \"heic\",\n  heix: \"heic\",\n  hevc: \"heic\",\n  // heic-sequence\n  hevx: \"heic\"\n  // heic-sequence\n};\nfunction detectBrands(buffer, start, end) {\n  let brandsDetected = {};\n  for (let i = start; i <= end; i += 4) {\n    const brand = toUTF8String(buffer, i, i + 4);\n    if (brand in brandMap) {\n      brandsDetected[brand] = 1;\n    }\n  }\n  if (\"avif\" in brandsDetected) {\n    return \"avif\";\n  } else if (\"heic\" in brandsDetected || \"heix\" in brandsDetected || \"hevc\" in brandsDetected || \"hevx\" in brandsDetected) {\n    return \"heic\";\n  } else if (\"mif1\" in brandsDetected || \"msf1\" in brandsDetected) {\n    return \"heif\";\n  }\n}\nconst HEIF = {\n  validate(buffer) {\n    const ftype = toUTF8String(buffer, 4, 8);\n    const brand = toUTF8String(buffer, 8, 12);\n    return \"ftyp\" === ftype && brand in brandMap;\n  },\n  calculate(buffer) {\n    const metaBox = findBox(buffer, \"meta\", 0);\n    const iprpBox = metaBox && findBox(buffer, \"iprp\", metaBox.offset + 12);\n    const ipcoBox = iprpBox && findBox(buffer, \"ipco\", iprpBox.offset + 8);\n    const ispeBox = ipcoBox && findBox(buffer, \"ispe\", ipcoBox.offset + 8);\n    if (ispeBox) {\n      return {\n        height: readUInt32BE(buffer, ispeBox.offset + 16),\n        width: readUInt32BE(buffer, ispeBox.offset + 12),\n        type: detectBrands(buffer, 8, metaBox.offset)\n      };\n    }\n    throw new TypeError(\"Invalid HEIF, no size found\");\n  }\n};\nexport {\n  HEIF\n};\n","import { toUTF8String, readUInt32BE } from \"./utils.js\";\nconst SIZE_HEADER = 4 + 4;\nconst FILE_LENGTH_OFFSET = 4;\nconst ENTRY_LENGTH_OFFSET = 4;\nconst ICON_TYPE_SIZE = {\n  ICON: 32,\n  \"ICN#\": 32,\n  // m => 16 x 16\n  \"icm#\": 16,\n  icm4: 16,\n  icm8: 16,\n  // s => 16 x 16\n  \"ics#\": 16,\n  ics4: 16,\n  ics8: 16,\n  is32: 16,\n  s8mk: 16,\n  icp4: 16,\n  // l => 32 x 32\n  icl4: 32,\n  icl8: 32,\n  il32: 32,\n  l8mk: 32,\n  icp5: 32,\n  ic11: 32,\n  // h => 48 x 48\n  ich4: 48,\n  ich8: 48,\n  ih32: 48,\n  h8mk: 48,\n  // . => 64 x 64\n  icp6: 64,\n  ic12: 32,\n  // t => 128 x 128\n  it32: 128,\n  t8mk: 128,\n  ic07: 128,\n  // . => 256 x 256\n  ic08: 256,\n  ic13: 256,\n  // . => 512 x 512\n  ic09: 512,\n  ic14: 512,\n  // . => 1024 x 1024\n  ic10: 1024\n};\nfunction readImageHeader(input, imageOffset) {\n  const imageLengthOffset = imageOffset + ENTRY_LENGTH_OFFSET;\n  return [\n    toUTF8String(input, imageOffset, imageLengthOffset),\n    readUInt32BE(input, imageLengthOffset)\n  ];\n}\nfunction getImageSize(type) {\n  const size = ICON_TYPE_SIZE[type];\n  return { width: size, height: size, type };\n}\nconst ICNS = {\n  validate: (input) => toUTF8String(input, 0, 4) === \"icns\",\n  calculate(input) {\n    const inputLength = input.length;\n    const fileLength = readUInt32BE(input, FILE_LENGTH_OFFSET);\n    let imageOffset = SIZE_HEADER;\n    let imageHeader = readImageHeader(input, imageOffset);\n    let imageSize = getImageSize(imageHeader[0]);\n    imageOffset += imageHeader[1];\n    if (imageOffset === fileLength) return imageSize;\n    const result = {\n      height: imageSize.height,\n      images: [imageSize],\n      width: imageSize.width\n    };\n    while (imageOffset < fileLength && imageOffset < inputLength) {\n      imageHeader = readImageHeader(input, imageOffset);\n      imageSize = getImageSize(imageHeader[0]);\n      imageOffset += imageHeader[1];\n      result.images.push(imageSize);\n    }\n    return result;\n  }\n};\nexport {\n  ICNS\n};\n","import { toHexString, readUInt32BE } from \"./utils.js\";\nconst J2C = {\n  // TODO: this doesn't seem right. SIZ marker doesn't have to be right after the SOC\n  validate: (input) => toHexString(input, 0, 4) === \"ff4fff51\",\n  calculate: (input) => ({\n    height: readUInt32BE(input, 12),\n    width: readUInt32BE(input, 8)\n  })\n};\nexport {\n  J2C\n};\n","import { readUInt32BE, findBox } from \"./utils.js\";\nconst JP2 = {\n  validate(input) {\n    if (readUInt32BE(input, 4) !== 1783636e3 || readUInt32BE(input, 0) < 1) return false;\n    const ftypBox = findBox(input, \"ftyp\", 0);\n    if (!ftypBox) return false;\n    return readUInt32BE(input, ftypBox.offset + 4) === 1718909296;\n  },\n  calculate(input) {\n    const jp2hBox = findBox(input, \"jp2h\", 0);\n    const ihdrBox = jp2hBox && findBox(input, \"ihdr\", jp2hBox.offset + 8);\n    if (ihdrBox) {\n      return {\n        height: readUInt32BE(input, ihdrBox.offset + 8),\n        width: readUInt32BE(input, ihdrBox.offset + 12)\n      };\n    }\n    throw new TypeError(\"Unsupported JPEG 2000 format\");\n  }\n};\nexport {\n  JP2\n};\n","import { readUInt, readUInt16BE, toHexString } from \"./utils.js\";\nconst EXIF_MARKER = \"45786966\";\nconst APP1_DATA_SIZE_BYTES = 2;\nconst EXIF_HEADER_BYTES = 6;\nconst TIFF_BYTE_ALIGN_BYTES = 2;\nconst BIG_ENDIAN_BYTE_ALIGN = \"4d4d\";\nconst LITTLE_ENDIAN_BYTE_ALIGN = \"4949\";\nconst IDF_ENTRY_BYTES = 12;\nconst NUM_DIRECTORY_ENTRIES_BYTES = 2;\nfunction isEXIF(input) {\n  return toHexString(input, 2, 6) === EXIF_MARKER;\n}\nfunction extractSize(input, index) {\n  return {\n    height: readUInt16BE(input, index),\n    width: readUInt16BE(input, index + 2)\n  };\n}\nfunction extractOrientation(exifBlock, isBigEndian) {\n  const idfOffset = 8;\n  const offset = EXIF_HEADER_BYTES + idfOffset;\n  const idfDirectoryEntries = readUInt(exifBlock, 16, offset, isBigEndian);\n  for (let directoryEntryNumber = 0; directoryEntryNumber < idfDirectoryEntries; directoryEntryNumber++) {\n    const start = offset + NUM_DIRECTORY_ENTRIES_BYTES + directoryEntryNumber * IDF_ENTRY_BYTES;\n    const end = start + IDF_ENTRY_BYTES;\n    if (start > exifBlock.length) {\n      return;\n    }\n    const block = exifBlock.slice(start, end);\n    const tagNumber = readUInt(block, 16, 0, isBigEndian);\n    if (tagNumber === 274) {\n      const dataFormat = readUInt(block, 16, 2, isBigEndian);\n      if (dataFormat !== 3) {\n        return;\n      }\n      const numberOfComponents = readUInt(block, 32, 4, isBigEndian);\n      if (numberOfComponents !== 1) {\n        return;\n      }\n      return readUInt(block, 16, 8, isBigEndian);\n    }\n  }\n}\nfunction validateExifBlock(input, index) {\n  const exifBlock = input.slice(APP1_DATA_SIZE_BYTES, index);\n  const byteAlign = toHexString(\n    exifBlock,\n    EXIF_HEADER_BYTES,\n    EXIF_HEADER_BYTES + TIFF_BYTE_ALIGN_BYTES\n  );\n  const isBigEndian = byteAlign === BIG_ENDIAN_BYTE_ALIGN;\n  const isLittleEndian = byteAlign === LITTLE_ENDIAN_BYTE_ALIGN;\n  if (isBigEndian || isLittleEndian) {\n    return extractOrientation(exifBlock, isBigEndian);\n  }\n}\nfunction validateInput(input, index) {\n  if (index > input.length) {\n    throw new TypeError(\"Corrupt JPG, exceeded buffer limits\");\n  }\n}\nconst JPG = {\n  validate: (input) => toHexString(input, 0, 2) === \"ffd8\",\n  calculate(input) {\n    input = input.slice(4);\n    let orientation;\n    let next;\n    while (input.length) {\n      const i = readUInt16BE(input, 0);\n      if (input[i] !== 255) {\n        input = input.slice(i);\n        continue;\n      }\n      if (isEXIF(input)) {\n        orientation = validateExifBlock(input, i);\n      }\n      validateInput(input, i);\n      next = input[i + 1];\n      if (next === 192 || next === 193 || next === 194) {\n        const size = extractSize(input, i + 5);\n        if (!orientation) {\n          return size;\n        }\n        return {\n          height: size.height,\n          orientation,\n          width: size.width\n        };\n      }\n      input = input.slice(i + 2);\n    }\n    throw new TypeError(\"Invalid JPG, no size found\");\n  }\n};\nexport {\n  JPG\n};\n","import { toUTF8String, readUInt32LE } from \"./utils.js\";\nconst KTX = {\n  validate: (input) => {\n    const signature = toUTF8String(input, 1, 7);\n    return [\"KTX 11\", \"KTX 20\"].includes(signature);\n  },\n  calculate: (input) => {\n    const type = input[5] === 49 ? \"ktx\" : \"ktx2\";\n    const offset = type === \"ktx\" ? 36 : 20;\n    return {\n      height: readUInt32LE(input, offset + 4),\n      width: readUInt32LE(input, offset),\n      type\n    };\n  }\n};\nexport {\n  KTX\n};\n","import { toUTF8String, readUInt32BE } from \"./utils.js\";\nconst pngSignature = \"PNG\\r\\n\u001a\\n\";\nconst pngImageHeaderChunkName = \"IHDR\";\nconst pngFriedChunkName = \"CgBI\";\nconst PNG = {\n  validate(input) {\n    if (pngSignature === toUTF8String(input, 1, 8)) {\n      let chunkName = toUTF8String(input, 12, 16);\n      if (chunkName === pngFriedChunkName) {\n        chunkName = toUTF8String(input, 28, 32);\n      }\n      if (chunkName !== pngImageHeaderChunkName) {\n        throw new TypeError(\"Invalid PNG\");\n      }\n      return true;\n    }\n    return false;\n  },\n  calculate(input) {\n    if (toUTF8String(input, 12, 16) === pngFriedChunkName) {\n      return {\n        height: readUInt32BE(input, 36),\n        width: readUInt32BE(input, 32)\n      };\n    }\n    return {\n      height: readUInt32BE(input, 20),\n      width: readUInt32BE(input, 16)\n    };\n  }\n};\nexport {\n  PNG\n};\n","import { toUTF8String } from \"./utils.js\";\nconst PNMTypes = {\n  P1: \"pbm/ascii\",\n  P2: \"pgm/ascii\",\n  P3: \"ppm/ascii\",\n  P4: \"pbm\",\n  P5: \"pgm\",\n  P6: \"ppm\",\n  P7: \"pam\",\n  PF: \"pfm\"\n};\nconst handlers = {\n  default: (lines) => {\n    let dimensions = [];\n    while (lines.length > 0) {\n      const line = lines.shift();\n      if (line[0] === \"#\") {\n        continue;\n      }\n      dimensions = line.split(\" \");\n      break;\n    }\n    if (dimensions.length === 2) {\n      return {\n        height: parseInt(dimensions[1], 10),\n        width: parseInt(dimensions[0], 10)\n      };\n    } else {\n      throw new TypeError(\"Invalid PNM\");\n    }\n  },\n  pam: (lines) => {\n    const size = {};\n    while (lines.length > 0) {\n      const line = lines.shift();\n      if (line.length > 16 || line.charCodeAt(0) > 128) {\n        continue;\n      }\n      const [key, value] = line.split(\" \");\n      if (key && value) {\n        size[key.toLowerCase()] = parseInt(value, 10);\n      }\n      if (size.height && size.width) {\n        break;\n      }\n    }\n    if (size.height && size.width) {\n      return {\n        height: size.height,\n        width: size.width\n      };\n    } else {\n      throw new TypeError(\"Invalid PAM\");\n    }\n  }\n};\nconst PNM = {\n  validate: (input) => toUTF8String(input, 0, 2) in PNMTypes,\n  calculate(input) {\n    const signature = toUTF8String(input, 0, 2);\n    const type = PNMTypes[signature];\n    const lines = toUTF8String(input, 3).split(/[\\r\\n]+/);\n    const handler = handlers[type] || handlers.default;\n    return handler(lines);\n  }\n};\nexport {\n  PNM\n};\n","import { toUTF8String, readUInt32BE } from \"./utils.js\";\nconst PSD = {\n  validate: (input) => toUTF8String(input, 0, 4) === \"8BPS\",\n  calculate: (input) => ({\n    height: readUInt32BE(input, 14),\n    width: readUInt32BE(input, 18)\n  })\n};\nexport {\n  PSD\n};\n","import { toUTF8String } from \"./utils.js\";\nconst svgReg = /<svg\\s([^>\"']|\"[^\"]*\"|'[^']*')*>/;\nconst extractorRegExps = {\n  height: /\\sheight=(['\"])([^%]+?)\\1/,\n  root: svgReg,\n  viewbox: /\\sviewBox=(['\"])(.+?)\\1/i,\n  width: /\\swidth=(['\"])([^%]+?)\\1/\n};\nconst INCH_CM = 2.54;\nconst units = {\n  in: 96,\n  cm: 96 / INCH_CM,\n  em: 16,\n  ex: 8,\n  m: 96 / INCH_CM * 100,\n  mm: 96 / INCH_CM / 10,\n  pc: 96 / 72 / 12,\n  pt: 96 / 72,\n  px: 1\n};\nconst unitsReg = new RegExp(\n  `^([0-9.]+(?:e\\\\d+)?)(${Object.keys(units).join(\"|\")})?$`\n);\nfunction parseLength(len) {\n  const m = unitsReg.exec(len);\n  if (!m) {\n    return void 0;\n  }\n  return Math.round(Number(m[1]) * (units[m[2]] || 1));\n}\nfunction parseViewbox(viewbox) {\n  const bounds = viewbox.split(\" \");\n  return {\n    height: parseLength(bounds[3]),\n    width: parseLength(bounds[2])\n  };\n}\nfunction parseAttributes(root) {\n  const width = extractorRegExps.width.exec(root);\n  const height = extractorRegExps.height.exec(root);\n  const viewbox = extractorRegExps.viewbox.exec(root);\n  return {\n    height: height && parseLength(height[2]),\n    viewbox: viewbox && parseViewbox(viewbox[2]),\n    width: width && parseLength(width[2])\n  };\n}\nfunction calculateByDimensions(attrs) {\n  return {\n    height: attrs.height,\n    width: attrs.width\n  };\n}\nfunction calculateByViewbox(attrs, viewbox) {\n  const ratio = viewbox.width / viewbox.height;\n  if (attrs.width) {\n    return {\n      height: Math.floor(attrs.width / ratio),\n      width: attrs.width\n    };\n  }\n  if (attrs.height) {\n    return {\n      height: attrs.height,\n      width: Math.floor(attrs.height * ratio)\n    };\n  }\n  return {\n    height: viewbox.height,\n    width: viewbox.width\n  };\n}\nconst SVG = {\n  // Scan only the first kilo-byte to speed up the check on larger files\n  validate: (input) => svgReg.test(toUTF8String(input, 0, 1e3)),\n  calculate(input) {\n    const root = extractorRegExps.root.exec(toUTF8String(input));\n    if (root) {\n      const attrs = parseAttributes(root[0]);\n      if (attrs.width && attrs.height) {\n        return calculateByDimensions(attrs);\n      }\n      if (attrs.viewbox) {\n        return calculateByViewbox(attrs, attrs.viewbox);\n      }\n    }\n    throw new TypeError(\"Invalid SVG\");\n  }\n};\nexport {\n  SVG\n};\n","import { readUInt16LE } from \"./utils.js\";\nconst TGA = {\n  validate(input) {\n    return readUInt16LE(input, 0) === 0 && readUInt16LE(input, 4) === 0;\n  },\n  calculate(input) {\n    return {\n      height: readUInt16LE(input, 14),\n      width: readUInt16LE(input, 12)\n    };\n  }\n};\nexport {\n  TGA\n};\n","import { readUInt, toHexString, toUTF8String } from \"./utils.js\";\nfunction readIFD(input, isBigEndian) {\n  const ifdOffset = readUInt(input, 32, 4, isBigEndian);\n  return input.slice(ifdOffset + 2);\n}\nfunction readValue(input, isBigEndian) {\n  const low = readUInt(input, 16, 8, isBigEndian);\n  const high = readUInt(input, 16, 10, isBigEndian);\n  return (high << 16) + low;\n}\nfunction nextTag(input) {\n  if (input.length > 24) {\n    return input.slice(12);\n  }\n}\nfunction extractTags(input, isBigEndian) {\n  const tags = {};\n  let temp = input;\n  while (temp && temp.length) {\n    const code = readUInt(temp, 16, 0, isBigEndian);\n    const type = readUInt(temp, 16, 2, isBigEndian);\n    const length = readUInt(temp, 32, 4, isBigEndian);\n    if (code === 0) {\n      break;\n    } else {\n      if (length === 1 && (type === 3 || type === 4)) {\n        tags[code] = readValue(temp, isBigEndian);\n      }\n      temp = nextTag(temp);\n    }\n  }\n  return tags;\n}\nfunction determineEndianness(input) {\n  const signature = toUTF8String(input, 0, 2);\n  if (\"II\" === signature) {\n    return \"LE\";\n  } else if (\"MM\" === signature) {\n    return \"BE\";\n  }\n}\nconst signatures = [\n  // '492049', // currently not supported\n  \"49492a00\",\n  // Little endian\n  \"4d4d002a\"\n  // Big Endian\n  // '4d4d002a', // BigTIFF > 4GB. currently not supported\n];\nconst TIFF = {\n  validate: (input) => signatures.includes(toHexString(input, 0, 4)),\n  calculate(input) {\n    const isBigEndian = determineEndianness(input) === \"BE\";\n    const ifdBuffer = readIFD(input, isBigEndian);\n    const tags = extractTags(ifdBuffer, isBigEndian);\n    const width = tags[256];\n    const height = tags[257];\n    if (!width || !height) {\n      throw new TypeError(\"Invalid Tiff. Missing tags\");\n    }\n    return { height, width };\n  }\n};\nexport {\n  TIFF\n};\n","import { toHexString, toUTF8String, readInt16LE, readUInt24LE } from \"./utils.js\";\nfunction calculateExtended(input) {\n  return {\n    height: 1 + readUInt24LE(input, 7),\n    width: 1 + readUInt24LE(input, 4)\n  };\n}\nfunction calculateLossless(input) {\n  return {\n    height: 1 + ((input[4] & 15) << 10 | input[3] << 2 | (input[2] & 192) >> 6),\n    width: 1 + ((input[2] & 63) << 8 | input[1])\n  };\n}\nfunction calculateLossy(input) {\n  return {\n    height: readInt16LE(input, 8) & 16383,\n    width: readInt16LE(input, 6) & 16383\n  };\n}\nconst WEBP = {\n  validate(input) {\n    const riffHeader = \"RIFF\" === toUTF8String(input, 0, 4);\n    const webpHeader = \"WEBP\" === toUTF8String(input, 8, 12);\n    const vp8Header = \"VP8\" === toUTF8String(input, 12, 15);\n    return riffHeader && webpHeader && vp8Header;\n  },\n  calculate(input) {\n    const chunkHeader = toUTF8String(input, 12, 16);\n    input = input.slice(20, 30);\n    if (chunkHeader === \"VP8X\") {\n      const extendedHeader = input[0];\n      const validStart = (extendedHeader & 192) === 0;\n      const validEnd = (extendedHeader & 1) === 0;\n      if (validStart && validEnd) {\n        return calculateExtended(input);\n      } else {\n        throw new TypeError(\"Invalid WebP\");\n      }\n    }\n    if (chunkHeader === \"VP8 \" && input[0] !== 47) {\n      return calculateLossy(input);\n    }\n    const signature = toHexString(input, 3, 6);\n    if (chunkHeader === \"VP8L\" && signature !== \"9d012a\") {\n      return calculateLossless(input);\n    }\n    throw new TypeError(\"Invalid WebP\");\n  }\n};\nexport {\n  WEBP\n};\n","import { BMP } from \"./bmp.js\";\nimport { CUR } from \"./cur.js\";\nimport { DDS } from \"./dds.js\";\nimport { GIF } from \"./gif.js\";\nimport { HEIF } from \"./heif.js\";\nimport { ICNS } from \"./icns.js\";\nimport { ICO } from \"./ico.js\";\nimport { J2C } from \"./j2c.js\";\nimport { JP2 } from \"./jp2.js\";\nimport { JPG } from \"./jpg.js\";\nimport { KTX } from \"./ktx.js\";\nimport { PNG } from \"./png.js\";\nimport { PNM } from \"./pnm.js\";\nimport { PSD } from \"./psd.js\";\nimport { SVG } from \"./svg.js\";\nimport { TGA } from \"./tga.js\";\nimport { TIFF } from \"./tiff.js\";\nimport { WEBP } from \"./webp.js\";\nconst typeHandlers = /* @__PURE__ */ new Map([\n  [\"bmp\", BMP],\n  [\"cur\", CUR],\n  [\"dds\", DDS],\n  [\"gif\", GIF],\n  [\"heif\", HEIF],\n  [\"icns\", ICNS],\n  [\"ico\", ICO],\n  [\"j2c\", J2C],\n  [\"jp2\", JP2],\n  [\"jpg\", JPG],\n  [\"ktx\", KTX],\n  [\"png\", PNG],\n  [\"pnm\", PNM],\n  [\"psd\", PSD],\n  [\"svg\", SVG],\n  [\"tga\", TGA],\n  [\"tiff\", TIFF],\n  [\"webp\", WEBP]\n]);\nconst types = Array.from(typeHandlers.keys());\nexport {\n  typeHandlers,\n  types\n};\n","import { typeHandlers, types } from \"./types/index.js\";\nconst firstBytes = /* @__PURE__ */ new Map([\n  [56, \"psd\"],\n  [66, \"bmp\"],\n  [68, \"dds\"],\n  [71, \"gif\"],\n  [73, \"tiff\"],\n  [77, \"tiff\"],\n  [82, \"webp\"],\n  [105, \"icns\"],\n  [137, \"png\"],\n  [255, \"jpg\"]\n]);\nfunction detector(input) {\n  const byte = input[0];\n  const type = firstBytes.get(byte);\n  if (type && typeHandlers.get(type).validate(input)) {\n    return type;\n  }\n  return types.find((fileType) => typeHandlers.get(fileType).validate(input));\n}\nexport {\n  detector\n};\n","import { typeHandlers } from \"./types/index.js\";\nimport { detector } from \"./detector.js\";\nconst globalOptions = {\n  disabledTypes: []\n};\nfunction lookup(input) {\n  const type = detector(input);\n  if (typeof type !== \"undefined\") {\n    if (globalOptions.disabledTypes.includes(type)) {\n      throw new TypeError(\"disabled file type: \" + type);\n    }\n    const size = typeHandlers.get(type).calculate(input);\n    if (size !== void 0) {\n      size.type = size.type ?? type;\n      return size;\n    }\n  }\n  throw new TypeError(\"unsupported file type: \" + type);\n}\nconst disableTypes = (types) => {\n  globalOptions.disabledTypes = types;\n};\nexport {\n  disableTypes,\n  lookup\n};\n","import { AstroError, AstroErrorData } from \"../../core/errors/index.js\";\nimport { lookup as probe } from \"../utils/vendor/image-size/lookup.js\";\nasync function imageMetadata(data, src) {\n  let result;\n  try {\n    result = probe(data);\n  } catch {\n    throw new AstroError({\n      ...AstroErrorData.NoImageMetadata,\n      message: AstroErrorData.NoImageMetadata.message(src)\n    });\n  }\n  if (!result.height || !result.width || !result.type) {\n    throw new AstroError({\n      ...AstroErrorData.NoImageMetadata,\n      message: AstroErrorData.NoImageMetadata.message(src)\n    });\n  }\n  const { width, height, type, orientation } = result;\n  const isPortrait = (orientation || 0) >= 5;\n  return {\n    width: isPortrait ? height : width,\n    height: isPortrait ? width : height,\n    format: type,\n    orientation\n  };\n}\nexport {\n  imageMetadata\n};\n","import { AstroError, AstroErrorData } from \"../../core/errors/index.js\";\nimport { imageMetadata } from \"./metadata.js\";\nasync function inferRemoteSize(url) {\n  const response = await fetch(url);\n  if (!response.body || !response.ok) {\n    throw new AstroError({\n      ...AstroErrorData.FailedToFetchRemoteImageDimensions,\n      message: AstroErrorData.FailedToFetchRemoteImageDimensions.message(url)\n    });\n  }\n  const reader = response.body.getReader();\n  let done, value;\n  let accumulatedChunks = new Uint8Array();\n  while (!done) {\n    const readResult = await reader.read();\n    done = readResult.done;\n    if (done) break;\n    if (readResult.value) {\n      value = readResult.value;\n      let tmp = new Uint8Array(accumulatedChunks.length + value.length);\n      tmp.set(accumulatedChunks, 0);\n      tmp.set(value, accumulatedChunks.length);\n      accumulatedChunks = tmp;\n      try {\n        const dimensions = await imageMetadata(accumulatedChunks, url);\n        if (dimensions) {\n          await reader.cancel();\n          return dimensions;\n        }\n      } catch {\n      }\n    }\n  }\n  throw new AstroError({\n    ...AstroErrorData.NoImageMetadata,\n    message: AstroErrorData.NoImageMetadata.message(url)\n  });\n}\nexport {\n  inferRemoteSize\n};\n","import { isRemotePath } from \"@astrojs/internal-helpers/path\";\nimport { AstroError, AstroErrorData } from \"../core/errors/index.js\";\nimport { DEFAULT_HASH_PROPS } from \"./consts.js\";\nimport {\n  DEFAULT_RESOLUTIONS,\n  LIMITED_RESOLUTIONS,\n  getSizesAttribute,\n  getWidths\n} from \"./layout.js\";\nimport { isLocalService } from \"./services/service.js\";\nimport {\n  isImageMetadata\n} from \"./types.js\";\nimport { addCSSVarsToStyle, cssFitValues } from \"./utils/imageAttributes.js\";\nimport { isESMImportedImage, isRemoteImage, resolveSrc } from \"./utils/imageKind.js\";\nimport { inferRemoteSize } from \"./utils/remoteProbe.js\";\nasync function getConfiguredImageService() {\n  if (!globalThis?.astroAsset?.imageService) {\n    const { default: service } = await import(\n      // @ts-expect-error\n      \"virtual:image-service\"\n    ).catch((e) => {\n      const error = new AstroError(AstroErrorData.InvalidImageService);\n      error.cause = e;\n      throw error;\n    });\n    if (!globalThis.astroAsset) globalThis.astroAsset = {};\n    globalThis.astroAsset.imageService = service;\n    return service;\n  }\n  return globalThis.astroAsset.imageService;\n}\nasync function getImage(options, imageConfig) {\n  if (!options || typeof options !== \"object\") {\n    throw new AstroError({\n      ...AstroErrorData.ExpectedImageOptions,\n      message: AstroErrorData.ExpectedImageOptions.message(JSON.stringify(options))\n    });\n  }\n  if (typeof options.src === \"undefined\") {\n    throw new AstroError({\n      ...AstroErrorData.ExpectedImage,\n      message: AstroErrorData.ExpectedImage.message(\n        options.src,\n        \"undefined\",\n        JSON.stringify(options)\n      )\n    });\n  }\n  if (isImageMetadata(options)) {\n    throw new AstroError(AstroErrorData.ExpectedNotESMImage);\n  }\n  const service = await getConfiguredImageService();\n  const resolvedOptions = {\n    ...options,\n    src: await resolveSrc(options.src)\n  };\n  let originalWidth;\n  let originalHeight;\n  let originalFormat;\n  if (options.inferSize && isRemoteImage(resolvedOptions.src) && isRemotePath(resolvedOptions.src)) {\n    const result = await inferRemoteSize(resolvedOptions.src);\n    resolvedOptions.width ??= result.width;\n    resolvedOptions.height ??= result.height;\n    originalWidth = result.width;\n    originalHeight = result.height;\n    originalFormat = result.format;\n    delete resolvedOptions.inferSize;\n  }\n  const originalFilePath = isESMImportedImage(resolvedOptions.src) ? resolvedOptions.src.fsPath : void 0;\n  const clonedSrc = isESMImportedImage(resolvedOptions.src) ? (\n    // @ts-expect-error - clone is a private, hidden prop\n    resolvedOptions.src.clone ?? resolvedOptions.src\n  ) : resolvedOptions.src;\n  if (isESMImportedImage(clonedSrc)) {\n    originalWidth = clonedSrc.width;\n    originalHeight = clonedSrc.height;\n    originalFormat = clonedSrc.format;\n  }\n  if (originalWidth && originalHeight) {\n    const aspectRatio = originalWidth / originalHeight;\n    if (resolvedOptions.height && !resolvedOptions.width) {\n      resolvedOptions.width = Math.round(resolvedOptions.height * aspectRatio);\n    } else if (resolvedOptions.width && !resolvedOptions.height) {\n      resolvedOptions.height = Math.round(resolvedOptions.width / aspectRatio);\n    } else if (!resolvedOptions.width && !resolvedOptions.height) {\n      resolvedOptions.width = originalWidth;\n      resolvedOptions.height = originalHeight;\n    }\n  }\n  resolvedOptions.src = clonedSrc;\n  const layout = options.layout ?? imageConfig.experimentalLayout;\n  if (imageConfig.experimentalResponsiveImages && layout) {\n    resolvedOptions.widths ||= getWidths({\n      width: resolvedOptions.width,\n      layout,\n      originalWidth,\n      breakpoints: imageConfig.experimentalBreakpoints?.length ? imageConfig.experimentalBreakpoints : isLocalService(service) ? LIMITED_RESOLUTIONS : DEFAULT_RESOLUTIONS\n    });\n    resolvedOptions.sizes ||= getSizesAttribute({ width: resolvedOptions.width, layout });\n    if (resolvedOptions.priority) {\n      resolvedOptions.loading ??= \"eager\";\n      resolvedOptions.decoding ??= \"sync\";\n      resolvedOptions.fetchpriority ??= \"high\";\n    } else {\n      resolvedOptions.loading ??= \"lazy\";\n      resolvedOptions.decoding ??= \"async\";\n      resolvedOptions.fetchpriority ??= \"auto\";\n    }\n    delete resolvedOptions.priority;\n    delete resolvedOptions.densities;\n    if (layout !== \"none\") {\n      resolvedOptions.style = addCSSVarsToStyle(\n        {\n          w: String(resolvedOptions.width),\n          h: String(resolvedOptions.height),\n          fit: cssFitValues.includes(resolvedOptions.fit ?? \"\") && resolvedOptions.fit,\n          pos: resolvedOptions.position\n        },\n        resolvedOptions.style\n      );\n      resolvedOptions[\"data-astro-image\"] = layout;\n    }\n  }\n  const validatedOptions = service.validateOptions ? await service.validateOptions(resolvedOptions, imageConfig) : resolvedOptions;\n  const srcSetTransforms = service.getSrcSet ? await service.getSrcSet(validatedOptions, imageConfig) : [];\n  let imageURL = await service.getURL(validatedOptions, imageConfig);\n  const matchesOriginal = (transform) => transform.width === originalWidth && transform.height === originalHeight && transform.format === originalFormat;\n  let srcSets = await Promise.all(\n    srcSetTransforms.map(async (srcSet) => {\n      return {\n        transform: srcSet.transform,\n        url: matchesOriginal(srcSet.transform) ? imageURL : await service.getURL(srcSet.transform, imageConfig),\n        descriptor: srcSet.descriptor,\n        attributes: srcSet.attributes\n      };\n    })\n  );\n  if (isLocalService(service) && globalThis.astroAsset.addStaticImage && !(isRemoteImage(validatedOptions.src) && imageURL === validatedOptions.src)) {\n    const propsToHash = service.propertiesToHash ?? DEFAULT_HASH_PROPS;\n    imageURL = globalThis.astroAsset.addStaticImage(\n      validatedOptions,\n      propsToHash,\n      originalFilePath\n    );\n    srcSets = srcSetTransforms.map((srcSet) => {\n      return {\n        transform: srcSet.transform,\n        url: matchesOriginal(srcSet.transform) ? imageURL : globalThis.astroAsset.addStaticImage(srcSet.transform, propsToHash, originalFilePath),\n        descriptor: srcSet.descriptor,\n        attributes: srcSet.attributes\n      };\n    });\n  }\n  return {\n    rawOptions: resolvedOptions,\n    options: validatedOptions,\n    src: imageURL,\n    srcSet: {\n      values: srcSets,\n      attribute: srcSets.map((srcSet) => `${srcSet.url} ${srcSet.descriptor}`).join(\", \")\n    },\n    attributes: service.getHTMLAttributes !== void 0 ? await service.getHTMLAttributes(validatedOptions, imageConfig) : {}\n  };\n}\nexport {\n  getConfiguredImageService,\n  getImage\n};\n","---\nimport { type LocalImageProps, type RemoteImageProps, getImage, imageConfig } from 'astro:assets';\nimport type { UnresolvedImageTransform } from '../dist/assets/types';\nimport { AstroError, AstroErrorData } from '../dist/core/errors/index.js';\nimport type { HTMLAttributes } from '../types';\n\n// The TypeScript diagnostic for JSX props uses the last member of the union to suggest props, so it would be better for\n// LocalImageProps to be last. Unfortunately, when we do this the error messages that remote images get are complete nonsense\n// Not 100% sure how to fix this, seems to be a TypeScript issue. Unfortunate.\ntype Props = LocalImageProps | RemoteImageProps;\n\nconst props = Astro.props;\n\nif (props.alt === undefined || props.alt === null) {\n\tthrow new AstroError(AstroErrorData.ImageMissingAlt);\n}\n\n// As a convenience, allow width and height to be string with a number in them, to match HTML's native `img`.\nif (typeof props.width === 'string') {\n\tprops.width = parseInt(props.width);\n}\n\nif (typeof props.height === 'string') {\n\tprops.height = parseInt(props.height);\n}\n\nconst layout = props.layout ?? imageConfig.experimentalLayout ?? 'none';\nconst useResponsive = imageConfig.experimentalResponsiveImages && layout !== 'none';\n\nif (useResponsive) {\n\t// Apply defaults from imageConfig if not provided\n\tprops.layout ??= imageConfig.experimentalLayout;\n\tprops.fit ??= imageConfig.experimentalObjectFit ?? 'cover';\n\tprops.position ??= imageConfig.experimentalObjectPosition ?? 'center';\n}\n\nconst image = await getImage(props as UnresolvedImageTransform);\n\nconst additionalAttributes: HTMLAttributes<'img'> = {};\nif (image.srcSet.values.length > 0) {\n\tadditionalAttributes.srcset = image.srcSet.attribute;\n}\n\nif (import.meta.env.DEV) {\n\tadditionalAttributes['data-image-component'] = 'true';\n}\n\nconst { class: className, ...attributes } = { ...additionalAttributes, ...image.attributes };\n---\n\n{/* Applying class outside of the spread prevents it from applying unnecessary astro-* classes */}\n<img src={image.src} {...attributes} class={className} />\n","---\nimport { type LocalImageProps, type RemoteImageProps, getImage, imageConfig } from 'astro:assets';\nimport * as mime from 'mrmime';\nimport { isESMImportedImage, resolveSrc } from '../dist/assets/utils/imageKind.js';\nimport { AstroError, AstroErrorData } from '../dist/core/errors/index.js';\nimport type {\n\tGetImageResult,\n\tImageOutputFormat,\n\tUnresolvedImageTransform,\n} from '../dist/types/public/index.js';\nimport type { HTMLAttributes } from '../types';\n\nexport type Props = (LocalImageProps | RemoteImageProps) & {\n\tformats?: ImageOutputFormat[];\n\tfallbackFormat?: ImageOutputFormat;\n\tpictureAttributes?: HTMLAttributes<'picture'>;\n};\n\nconst defaultFormats = ['webp'] as const;\nconst defaultFallbackFormat = 'png' as const;\n\n// Certain formats don't want PNG fallbacks:\n// - GIF will typically want to stay as a gif, either for animation or for the lower amount of colors\n// - SVGs can't be converted to raster formats in most cases\n// - JPEGs compress photographs and high-noise images better than PNG in most cases\n// For those, we'll use the original format as the fallback instead.\nconst specialFormatsFallback = ['gif', 'svg', 'jpg', 'jpeg'] as const;\n\nconst { formats = defaultFormats, pictureAttributes = {}, fallbackFormat, ...props } = Astro.props;\n\nif (props.alt === undefined || props.alt === null) {\n\tthrow new AstroError(AstroErrorData.ImageMissingAlt);\n}\n\n// Picture attribute inherit scoped styles from class and attributes\nconst scopedStyleClass = props.class?.match(/\\bastro-\\w{8}\\b/)?.[0];\nif (scopedStyleClass) {\n\tif (pictureAttributes.class) {\n\t\tpictureAttributes.class = `${pictureAttributes.class} ${scopedStyleClass}`;\n\t} else {\n\t\tpictureAttributes.class = scopedStyleClass;\n\t}\n}\n\nconst layout = props.layout ?? imageConfig.experimentalLayout ?? 'none';\nconst useResponsive = imageConfig.experimentalResponsiveImages && layout !== 'none';\n\nif (useResponsive) {\n\t// Apply defaults from imageConfig if not provided\n\tprops.layout ??= imageConfig.experimentalLayout;\n\tprops.fit ??= imageConfig.experimentalObjectFit ?? 'cover';\n\tprops.position ??= imageConfig.experimentalObjectPosition ?? 'center';\n}\n\nfor (const key in props) {\n\tif (key.startsWith('data-astro-cid')) {\n\t\tpictureAttributes[key] = props[key];\n\t}\n}\n\nconst originalSrc = await resolveSrc(props.src);\nconst optimizedImages: GetImageResult[] = await Promise.all(\n\tformats.map(\n\t\tasync (format) =>\n\t\t\tawait getImage({\n\t\t\t\t...props,\n\t\t\t\tsrc: originalSrc,\n\t\t\t\tformat: format,\n\t\t\t\twidths: props.widths,\n\t\t\t\tdensities: props.densities,\n\t\t\t} as UnresolvedImageTransform),\n\t),\n);\n\nlet resultFallbackFormat = fallbackFormat ?? defaultFallbackFormat;\nif (\n\t!fallbackFormat &&\n\tisESMImportedImage(originalSrc) &&\n\t(specialFormatsFallback as ReadonlyArray<string>).includes(originalSrc.format)\n) {\n\tresultFallbackFormat = originalSrc.format;\n}\n\nconst fallbackImage = await getImage({\n\t...props,\n\tformat: resultFallbackFormat,\n\twidths: props.widths,\n\tdensities: props.densities,\n} as UnresolvedImageTransform);\n\nconst imgAdditionalAttributes: HTMLAttributes<'img'> = {};\nconst sourceAdditionalAttributes: HTMLAttributes<'source'> = {};\n\n// Propagate the `sizes` attribute to the `source` elements\nif (props.sizes) {\n\tsourceAdditionalAttributes.sizes = props.sizes;\n}\n\nif (fallbackImage.srcSet.values.length > 0) {\n\timgAdditionalAttributes.srcset = fallbackImage.srcSet.attribute;\n}\n\nif (import.meta.env.DEV) {\n\timgAdditionalAttributes['data-image-component'] = 'true';\n}\n\nconst { class: className, ...attributes } = {\n\t...imgAdditionalAttributes,\n\t...fallbackImage.attributes,\n};\n---\n\n<picture {...pictureAttributes}>\n\t{\n\t\tObject.entries(optimizedImages).map(([_, image]) => {\n\t\t\tconst srcsetAttribute =\n\t\t\t\tprops.densities || (!props.densities && !props.widths && !useResponsive)\n\t\t\t\t\t? `${image.src}${image.srcSet.values.length > 0 ? ', ' + image.srcSet.attribute : ''}`\n\t\t\t\t\t: image.srcSet.attribute;\n\t\t\treturn (\n\t\t\t\t<source\n\t\t\t\t\tsrcset={srcsetAttribute}\n\t\t\t\t\ttype={mime.lookup(image.options.format ?? image.src) ?? `image/${image.options.format}`}\n\t\t\t\t\t{...sourceAdditionalAttributes}\n\t\t\t\t/>\n\t\t\t);\n\t\t})\n\t}\n\t{/* Applying class outside of the spread prevents it from applying unnecessary astro-* classes */}\n\t<img src={fallbackImage.src} {...attributes} class={className} />\n</picture>\n","const fnv1a52 = (str) => {\n  const len = str.length;\n  let i = 0, t0 = 0, v0 = 8997, t1 = 0, v1 = 33826, t2 = 0, v2 = 40164, t3 = 0, v3 = 52210;\n  while (i < len) {\n    v0 ^= str.charCodeAt(i++);\n    t0 = v0 * 435;\n    t1 = v1 * 435;\n    t2 = v2 * 435;\n    t3 = v3 * 435;\n    t2 += v0 << 8;\n    t3 += v1 << 8;\n    t1 += t0 >>> 16;\n    v0 = t0 & 65535;\n    t2 += t1 >>> 16;\n    v1 = t1 & 65535;\n    v3 = t3 + (t2 >>> 16) & 65535;\n    v2 = t2 & 65535;\n  }\n  return (v3 & 15) * 281474976710656 + v2 * 4294967296 + v1 * 65536 + (v0 ^ v3 >> 4);\n};\nconst etag = (payload, weak = false) => {\n  const prefix = weak ? 'W/\"' : '\"';\n  return prefix + fnv1a52(payload).toString(36) + payload.length.toString(36) + '\"';\n};\nexport {\n  etag,\n  fnv1a52\n};\n","import { imageConfig } from \"astro:assets\";\nimport { isRemotePath } from \"@astrojs/internal-helpers/path\";\nimport { isRemoteAllowed } from \"@astrojs/internal-helpers/remote\";\nimport * as mime from \"mrmime\";\nimport { getConfiguredImageService } from \"../internal.js\";\nimport { etag } from \"../utils/etag.js\";\nasync function loadRemoteImage(src, headers) {\n  try {\n    const res = await fetch(src, {\n      // Forward all headers from the original request\n      headers\n    });\n    if (!res.ok) {\n      return void 0;\n    }\n    return await res.arrayBuffer();\n  } catch {\n    return void 0;\n  }\n}\nconst GET = async ({ request }) => {\n  try {\n    const imageService = await getConfiguredImageService();\n    if (!(\"transform\" in imageService)) {\n      throw new Error(\"Configured image service is not a local service\");\n    }\n    const url = new URL(request.url);\n    const transform = await imageService.parseURL(url, imageConfig);\n    if (!transform?.src) {\n      throw new Error(\"Incorrect transform returned by `parseURL`\");\n    }\n    let inputBuffer = void 0;\n    const isRemoteImage = isRemotePath(transform.src);\n    const sourceUrl = isRemoteImage ? new URL(transform.src) : new URL(transform.src, url.origin);\n    if (isRemoteImage && isRemoteAllowed(transform.src, imageConfig) === false) {\n      return new Response(\"Forbidden\", { status: 403 });\n    }\n    inputBuffer = await loadRemoteImage(sourceUrl, isRemoteImage ? new Headers() : request.headers);\n    if (!inputBuffer) {\n      return new Response(\"Not Found\", { status: 404 });\n    }\n    const { data, format } = await imageService.transform(\n      new Uint8Array(inputBuffer),\n      transform,\n      imageConfig\n    );\n    return new Response(data, {\n      status: 200,\n      headers: {\n        \"Content-Type\": mime.lookup(format) ?? `image/${format}`,\n        \"Cache-Control\": \"public, max-age=31536000\",\n        ETag: etag(data.toString()),\n        Date: (/* @__PURE__ */ new Date()).toUTCString()\n      }\n    });\n  } catch (err) {\n    console.error(\"Could not process image request:\", err);\n    return new Response(`Server Error: ${err}`, { status: 500 });\n  }\n};\nexport {\n  GET\n};\n"],"names":["AstroErrorData.ExpectedImage","AstroErrorData.LocalImageUsedWrongly","AstroErrorData.MissingImageDimension","AstroErrorData.UnsupportedImageFormat","AstroErrorData.IncompatibleDescriptorOptions","AstroErrorData.UnsupportedImageConversion","SIZE_HEADER","getImageSize","probe","AstroErrorData.NoImageMetadata","AstroErrorData.FailedToFetchRemoteImageDimensions","AstroErrorData.InvalidImageService","getImage","AstroErrorData.ExpectedImageOptions","AstroErrorData.ExpectedNotESMImage","$$Astro","$$createAstro","$$createComponent","Astro","AstroErrorData.ImageMissingAlt","$$render","$$maybeRenderHead","$$addAttribute","$$spreadAttributes"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34]}